<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsm.frame.mapper.CourseJobUserMapper">
  <resultMap id="BaseResultMap" type="com.lsm.frame.model.entity.CourseJobUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_job_id" jdbcType="INTEGER" property="courseJobId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    id, course_job_id, user_id, state, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_job_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_job_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lsm.frame.model.entity.CourseJobUser">
    insert into course_job_user (id, course_job_id, user_id, 
      state, score)
    values (#{id,jdbcType=INTEGER}, #{courseJobId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{state,jdbcType=CHAR}, #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lsm.frame.model.entity.CourseJobUser">
    insert into course_job_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseJobId != null">
        course_job_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseJobId != null">
        #{courseJobId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsm.frame.model.entity.CourseJobUser">
    update course_job_user
    <set>
      <if test="courseJobId != null">
        course_job_id = #{courseJobId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsm.frame.model.entity.CourseJobUser">
    update course_job_user
    set course_job_id = #{courseJobId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      state = #{state,jdbcType=CHAR},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 通过hid,cid查 -->
  <select id="selectCjuBycju" resultMap="BaseResultMap">
		select
        <include refid="Base_Column_List" />
        from course_job_user
         where course_job_id = #{0,jdbcType=INTEGER} and user_id = #{1,jdbcType=INTEGER}
	</select>


</mapper>